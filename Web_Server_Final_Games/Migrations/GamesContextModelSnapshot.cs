// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_Server_Final_Games.Models;

namespace Web_Server_Final_Games.Migrations
{
    [DbContext(typeof(GamesContext))]
    partial class GamesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web_Server_Final_Games.Models.Games", b =>
                {
                    b.Property<int>("gameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("gameCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gameRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gameTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("gameId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            gameId = 1,
                            gameTitle = "Elden Ring",
                            gameCategory = "Video Game",
                            gameRating = "M17"
                        },

                        new
                        {
                            gameId = 2,
                            gameTitle = "Outer Wilds",
                            gameCategory = "Video Game",
                            gameRating = "E"

                        },

                        new
                        {
                            gameId = 3,
                            gameTitle = "Just Dance",
                            gameCategory = "Video Game",
                            gameRating = "E"
                        },
                        new
                        {
                            gameId = 4,
                            gameTitle = "EverDell",
                            gameCategory = "TTRPG",
                            gameRating = "E"

                        },

                        new
                        {
                            gameId = 5,
                            gameTitle = "DnD",
                            gameCategory = "TTRPG",
                            gameRating = "E"
                        },
                        new
                        {
                            gameId = 6,
                            gameTitle = "Cards Against Humanity",
                            gameCategory = "Card Game",
                            gameRating = "NSFW"
                        },

                        new
                        {
                            gameId = 7,
                            gameTitle = "Magic the Gathering",
                            gameCategory = "Card Game",
                            gameRating = "E"
                        }


                        );
                });
#pragma warning restore 612, 618
        }
    }
}
